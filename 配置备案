{
    "configurations": [
        {
            "name": "Win32",
            "includePath": [
                "${workspaceRoot}",
                "D:/MinGW64/MinGW64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++",
                "D:/MinGW64/MinGW64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32",
                "D:/MinGW64/MinGW64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward",
                "D:/MinGW64/MinGW64/lib/gcc/x86_64-w64-mingw32/8.1.0/include",
                "D:/MinGW64/MinGW64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/tr1",
                "D:/MinGW64/MinGW64/x86_64-w64-mingw32/include"
            ],
            "defines": [
                "_DEBUG",
                "UNICODE",
                "__GNUC__=6",
                "__cdecl=__attribute__((__cdecl__))"
            ],
            "intelliSenseMode": "msvc-x64",
            "browse": {
                "path": [
                    "${workspaceRoot}",
                    "D:/MinGW64/MinGW64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++",
                    "D:/MinGW64/MinGW64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/x86_64-w64-mingw32",
                    "D:/MinGW64/MinGW64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/backward",
                    "D:/MinGW64/MinGW64/lib/gcc/x86_64-w64-mingw32/8.1.0/include",
                    "D:/MinGW64/MinGW64/lib/gcc/x86_64-w64-mingw32/8.1.0/include/c++/tr1",
                    "D:/MinGW64/MinGW64/x86_64-w64-mingw32/include"
                ]
            },
            "limitSymbolsToIncludedHeaders": true,
            "databaseFilename": ""
        }
    ],
    "version": 4
    
}

{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "C++ Launch (GDB)",                 // 配置名称，将会在启动配置的下拉菜单中显示
            "type": "cppdbg",                           // 配置类型，这里只能为cppdbg
            "request": "launch",                        // 请求配置类型，可以为launch（启动）或attach（附加）               // 调试器启动类型，这里只能为Local
            "targetArchitecture": "x86",                // 生成目标架构，一般为x86或x64，可以为x86, arm, arm64, mips, x64, amd64, x86_64
            "program": "${file}.exe",                   // 将要进行调试的程序的路径
            "miDebuggerPath":"D:\\MinGW64\\MinGW64\\bin\\gdb.exe", // miDebugger的路径，注意这里要与MinGw的路径对应
            "args": ["blackkitty",  "1221", "# #"],     // 程序调试时传递给程序的命令行参数，一般设为空即可
            "stopAtEntry": false,                       // 设为true时程序将暂停在程序入口处，一般设置为false
            "cwd": "${workspaceRoot}",                  // 调试程序时的工作目录，一般为${workspaceRoot}即代码所在目录
            "externalConsole": true,                    // 调试时是否显示控制台窗口，一般设置为true显示控制台
            "preLaunchTask": "g++"　　                  // 调试会话开始前执行的任务，一般为编译程序，c++为g++, c为gcc
        }
    ]
}

{
    "C_Cpp.errorSquiggles": "Disabled",
    "files.associations": {
        "stdio.h": "c",
        "fstream": "cpp",
        "iostream": "cpp",
        "vector": "cpp",
        "algorithm": "cpp",
    }
}

{
    "version": "2.0.0",
    "command": "g++",
    "args": ["-g","${file}","-o","${file}.exe"],    // 编译命令参数
    "problemMatcher": {
        "owner": "cpp",
        "fileLocation": ["relative", "${workspaceRoot}"],
        "pattern": {
            "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
            "file": 1,
            "line": 2,
            "column": 3,
            "severity": 4,
            "message": 5
        }
    }
}
